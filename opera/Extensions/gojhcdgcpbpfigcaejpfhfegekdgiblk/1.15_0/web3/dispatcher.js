(()=>{"use strict";class e{providerPort;servicePort=null;state=0;constructor(e){this.providerPort=e,this.providerPort.onmessage=e=>this.onProviderMessage(e.data)}onProviderMessage(e){var t,s,r;if(this.servicePort||(s=e,0!==(t=this.state)&&(2!==t||"eth_accounts"!==s.method&&"eth_requestAccounts"!==s.method))||this.connectToService(),this.servicePort)try{this.servicePort.postMessage(e)}catch{this.onServiceDisconnected()}if(!this.servicePort){const t=void 0===(r=e.id)?null:{error:{code:4100,message:"The requested account and/or method has not been authorized by the user."},id:r,jsonrpc:"2.0"};t&&this.providerPort.postMessage(t)}}connectToService(){var e;this.servicePort=chrome.runtime.connect({name:"web3provider"}),this.servicePort.onMessage.addListener(this.onServiceMessage.bind(this)),this.servicePort.onDisconnect.addListener(this.onServiceDisconnected.bind(this)),this.state=0===(e=this.state)||2===e?1:e}onServiceMessage(e){this.state=3,this.providerPort.postMessage(e)}onServiceDisconnected(){var e;this.servicePort=null,this.state=3===(e=this.state)?0:1===e?2:e}}new Promise((e=>{const t=s=>{"InitializeOperaCryptoWalletWeb3Provider"===s.data&&(window.removeEventListener("message",t),e(s.ports[0]))};window.addEventListener("message",t)})).then((t=>{new e(t)})),function(){const e=document.createElement("script");e.onload=e.onerror=e=>e.target.remove(),e.src=chrome.runtime.getURL("web3/provider.js"),(document.head||document.documentElement).appendChild(e)}()})();