{"registers": {"0": [["}"], false], "1-9": [[["        while ()\n"], true], [["    {\n"], true], [["#include<cmath>\n"], true], [["    bool spin;\n"], true], [["\n"], true], [["\n};\n"], true], [["\n"], true], [["#include<iostream>\n\nclass Node {\npublic:\n    int value;\n    Node* next_ptr;\n\n    Node(int val) : value(val), next_ptr(nullptr) {}\n};\n\n\nclass LinkedList {\npublic:\n    Node* head;\n\n    LinkedList() : head(nullptr);\n\n    void append(int value) {\n\n        Node* newNode = new Node(value);\n\n        if (head == nullptr) {\n            head = newNode;\n            return;\n        }\n\n        Node* temp = head;\n        while(temp->next_ptr != newNode) {\n            temp = temp->next_ptr;\n        }\n\n        temp->next_ptr = newNode;\n    }\n\n\n    int get_nth_element(int n) {\n        \n    }\n"], true], [["\n"], true]], "#": [["/home/Fornax/hause/significant things/code/C++/pointer_practice.cpp"], false], "\"": [["temp"], false], "-": [["temp"], false]}, "history": {"1": {"num": 280, "items": {"21": "q", "34": "pwd", "35": "!pwd", "256": "wq", "264": ";w", "280": "w"}}, "2": {"num": 3, "items": {"1": "font", "2": "println", "3": "progress"}}, "3": {"num": 0, "items": {}}, "4": {"num": 0, "items": {}}, "5": {"num": 0, "items": {}}}, "last_search_pattern": "progress", "last_search_pattern_command": "nv_vi_slash"}